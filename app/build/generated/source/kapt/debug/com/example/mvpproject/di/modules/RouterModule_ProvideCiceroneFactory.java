// Generated by Dagger (https://dagger.dev).
package com.example.mvpproject.di.modules;

import com.github.terrakok.cicerone.Cicerone;
import com.github.terrakok.cicerone.Router;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RouterModule_ProvideCiceroneFactory implements Factory<Cicerone<Router>> {
  private final RouterModule module;

  public RouterModule_ProvideCiceroneFactory(RouterModule module) {
    this.module = module;
  }

  @Override
  public Cicerone<Router> get() {
    return provideCicerone(module);
  }

  public static RouterModule_ProvideCiceroneFactory create(RouterModule module) {
    return new RouterModule_ProvideCiceroneFactory(module);
  }

  public static Cicerone<Router> provideCicerone(RouterModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideCicerone());
  }
}
