// Generated by Dagger (https://dagger.dev).
package com.example.mvpproject.ui;

import com.github.terrakok.cicerone.NavigatorHolder;
import com.github.terrakok.cicerone.Router;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<Router> routerProvider;

  private final Provider<NavigatorHolder> navigatorHolderProvider;

  public MainActivity_MembersInjector(Provider<Router> routerProvider,
      Provider<NavigatorHolder> navigatorHolderProvider) {
    this.routerProvider = routerProvider;
    this.navigatorHolderProvider = navigatorHolderProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<Router> routerProvider,
      Provider<NavigatorHolder> navigatorHolderProvider) {
    return new MainActivity_MembersInjector(routerProvider, navigatorHolderProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectRouter(instance, routerProvider.get());
    injectNavigatorHolder(instance, navigatorHolderProvider.get());
  }

  @InjectedFieldSignature("com.example.mvpproject.ui.MainActivity.router")
  public static void injectRouter(MainActivity instance, Router router) {
    instance.router = router;
  }

  @InjectedFieldSignature("com.example.mvpproject.ui.MainActivity.navigatorHolder")
  public static void injectNavigatorHolder(MainActivity instance, NavigatorHolder navigatorHolder) {
    instance.navigatorHolder = navigatorHolder;
  }
}
