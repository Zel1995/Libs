// Generated by Dagger (https://dagger.dev).
package com.example.mvpproject.ui.login;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginFragment_MembersInjector implements MembersInjector<LoginFragment> {
  private final Provider<LoginContract.Presenter> presenterMoxyProvider;

  public LoginFragment_MembersInjector(Provider<LoginContract.Presenter> presenterMoxyProvider) {
    this.presenterMoxyProvider = presenterMoxyProvider;
  }

  public static MembersInjector<LoginFragment> create(
      Provider<LoginContract.Presenter> presenterMoxyProvider) {
    return new LoginFragment_MembersInjector(presenterMoxyProvider);
  }

  @Override
  public void injectMembers(LoginFragment instance) {
    injectPresenterMoxy(instance, presenterMoxyProvider.get());
  }

  @InjectedFieldSignature("com.example.mvpproject.ui.login.LoginFragment.presenterMoxy")
  public static void injectPresenterMoxy(LoginFragment instance,
      LoginContract.Presenter presenterMoxy) {
    instance.presenterMoxy = presenterMoxy;
  }
}
